@{
    ViewData["Title"] = "Multiple Quiz";
}

<style>
    * {
        margin: 0;
        padding: 0;
        box-sizing: border-box;
    }

    body {
        background: #3586ff;
        font-family: 'Font1', sans-serif;
    }

    .container {
        width: 95%;
        max-width: 64rem;
        background: #fff;
        padding: 0.8rem;
        border-radius: 1rem;
        overflow: auto;
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        display: grid;
        gap: 1rem;
        grid-template-columns: 2fr 2fr 1.5fr;
        grid-template-rows: 0.1fr 2fr 1fr;
        grid-template-areas:
            "quiz-title quiz-title quiz-title"
            "question-section question-section questions-nav-section"
            "explanation-section explanation-section questions-nav-section";
    }

    .quiz-title {
        grid-area: quiz-title;
        font-weight: 800;
        font-size: 1rem;
        text-align: center;
        margin-bottom: 1rem;
    }

    .question-section {
        grid-area: question-section
    }

    .question {
        padding: 0.5rem;
        border: 2px solid #799efe;
        border-radius: 0.5rem;
        margin-bottom: 1rem;
    }

        .question .question-text {
            margin-bottom: 0.5rem;
        }

        .question .question-num {
            font-weight: 700;
            font-size: 0.9rem;
            margin-bottom: 1rem;
        }

    .answer-item {
        padding: 0.01rem 0;
        display: flex;
        flex-direction: column;
        box-shadow: 0 7px 7px rgba(0, 0, 0, 0.1);
        border-radius: 0.5rem;
        margin-bottom: 2rem;
        margin-bottom: 1.2rem; /* Ajustez si nécessaire */
        cursor: pointer;
    }

        .answer-item span {
            margin-left: 2rem;
            font-size: 1rem;
            margin-bottom: 0.5rem;
        }

        .answer-item:hover,
        .answer-item:active {
            background: #aabdff;
            color: #fff;
        }

        .answer-item input[type="radio"] {
            display: none;
        }

    .action {
        margin-top: 1rem;
        margin-bottom: 1rem;
        text-align: center;
    }

    .btn {
        background: inherit;
        border: 0;
        border-radius: 0.5rem;
        box-shadow: 0 7px 7px rgba(0, 0, 0, 0.1);
        padding: 0.5rem 1rem;
        margin-right: 1.5rem;
        font-weight: 700;
        cursor: pointer;
    }

        .btn:hover,
        .btn:active {
            background: #aabdff;
            color: #fff;
        }

    .explanation-section {
        grid-area: explanation-section;
        padding: 0.5rem;
        border-radius: 0.5rem;
        box-shadow: 0 7px 7px rgba(0, 0, 0, 0.1);
    }

        .explanation-section .section-title {
            font-weight: 700;
            font-size: 0.9rem;
            margin-bottom: 1rem;
        }

        .explanation-section .explanation-text {
            margin-right: 1rem;
            margin-left: 1rem;
            margin-bottom: 1.5rem;
        }

    .questions-nav-section {
        grid-area: questions-nav-section;
        padding: 1rem;
        box-shadow: 0 7px 7px rgba(0, 0, 0, 0.1);
        border-radius: 0.5rem;
    }

        .questions-nav-section .question-nums-list {
            display: grid;
            grid-template-columns: repeat(5, 1fr);
            grid-auto-rows: minmax(0, 1fr);
            gap: 10px;
            list-style: none;
            padding: 0;
            margin: 0;
        }

            .questions-nav-section .question-nums-list a {
                text-decoration: none;
                color: inherit;
                padding: 0.5rem;
                background: #c4c4c4;
                border-radius: 50%;
                display: inline-block;
                width: 2.5rem;
                height: 2.5rem;
                display: flex;
                align-items: center;
                justify-content: center;
                font-weight: 700;
                color: #fff;
            }

                .questions-nav-section .question-nums-list a.done {
                    background: #aabdff;
                }

                .questions-nav-section .question-nums-list a.active {
                    background: #ffaaaf;
                }

    .question-context {
        margin-bottom: 2rem;
        display: flex;
        justify-content: space-between;
    }

        .question-context a {
            font-weight: 700;
            font-size: 0.9rem;
            text-decoration: none;
            color: inherit;
        }

            .question-context a:hover {
                color: #aabdff;
            }

    .d-flex {
        display: flex;
        justify-content: center;
        width: 100%;
    }
</style>


<div class="container">
    <h1 class="quiz-title">Programmation C++</h1>
    <label for="level-selector">Choisir le niveau:</label>
    <select id="level-selector" onchange="changeLevel()">
        <option value="easy">Moyen</option>
        <option value="hard">Difficile</option>
    </select>

    <section class="question-section">
        <div class="question">
            <h2 class="question-num" id="questionNum"></h2>
            <p class="question-text" id="questionText"></p>
        </div>
        <div class="answer-item" id="options-container"></div>
        <div class="action">
            <button class="btn" id="prev-btn" onclick="prevQuestion()">Prev</button>
            <button class="btn" id="next-btn" onclick="nextQuestion()">Next</button>
        </div>
    </section>

    <section class="explanation-section">
        <h2 class="section-title">Feedback</h2>
        <p class="explanation-text" id="result"></p>
    </section>

    <section class="questions-nav-section">
        <p class="question-context">
            <a href="#"><span class="question-num" id="currentQuestionNum">Question 1/3</span></a>
        </p>
        <div class="d-flex">
            <ul class="question-nums-list" id="questionNumbersList">
                <li><a class="done">1</a></li>
                <li><a href="#" onclick="showQuestion(1)">2</a></li>
                <li><a href="#" onclick="showQuestion(2)">3</a></li>
            </ul>
        </div>
    </section>
</div>


<script>
    const quizData = {
        easy: [
            {
                questionNum: "Question 1",
                questionText: "La POO(Programmation Orientée  Objet) est: ",
                options: ["Un paradigme de programmation",
                    "Un langage de programmation"],
                correctAnswer: "Un paradigme de programmation"
            },
            {
                questionNum: "Question 2",
                questionText: "La generalisation est permet a des sous-classe de derriver et ainsi de finir des sous-classes plus spécifiques.",
                options: ["VRAI",
                    "FAUX"],
                correctAnswer: "VRAI"
            },
        ],
        hard: [
            {
                questionNum: "Question 1",
                questionText: "Lequel de ces quatres n'est pas un principes de la Programmation Orrientee Objet?",
                options: ["Abstration",
                    "Polymorphisme",
                    "principe de service",
                    "Encapsulation"],
                correctAnswer: "principe de service"
            },
            {
                questionNum: "Question 2",
                questionText: "lequel de ces quatre n'est pas un specifateur d'acces en programmation",
                options: ["Protected",
                    "Public",
                    "Private",
                    "Unaccessible"],
                correctAnswer: "Unaccessible"
            },
        ]
    };

    let currentQuestion = 0;
    let currentLevel = 'easy';
    const questionNumElement = document.getElementById('questionNum');
    const questionTextElement = document.getElementById('questionText');
    const optionsContainer = document.getElementById('options-container');
    const prevButton = document.getElementById('prev-btn');
    const nextButton = document.getElementById('next-btn');
    const levelSelector = document.getElementById('level-selector');
    const resultDiv = document.getElementById('result');

    function showQuestion() {
        const currentQuizData = quizData[currentLevel][currentQuestion];
        questionNumElement.innerText = currentQuizData.questionNum;
        questionTextElement.innerText = currentQuizData.questionText;

        optionsContainer.innerHTML = '';
        for (const option of currentQuizData.options) {
            const optionDiv = document.createElement('div');
            optionDiv.className = 'answer-item';

            const span = document.createElement('span');
            span.innerText = option;

            const radioInput = document.createElement('input');
            radioInput.type = 'radio';
            radioInput.name = 'answer';  // Assurez-vous que chaque option a le même nom pour le regroupement radio

            optionDiv.appendChild(radioInput);
            optionDiv.appendChild(span);

            optionDiv.addEventListener('click', () => checkAnswer(option));

            optionsContainer.appendChild(optionDiv);
        }

        if (currentQuestion === 0) {
            prevButton.disabled = true;
        } else {
            prevButton.disabled = false;
        }

        if (currentQuestion === quizData[currentLevel].length - 1) {
            nextButton.innerText = 'Terminer';
        } else {
            nextButton.innerText = 'Suivant';
        }

        resultDiv.innerHTML = '';
    }

    function checkAnswer(selectedOption) {
        const currentQuizData = quizData[currentLevel][currentQuestion];
        const correctAnswer = currentQuizData.correctAnswer;


        const buttons = optionsContainer.querySelectorAll('div');
        buttons.forEach(div => {
            div.disabled = true;
            if (div.innerText === correctAnswer) {
                div.style.backgroundColor = '#4CAF50';
            } else {
                div.style.backgroundColor = '#f44336';
            }
        });

        const fullSentence = `${correctAnswer}.`;
        resultDiv.innerText = fullSentence;

        if (selectedOption === correctAnswer) {
            console.log('Bonne réponse!');
        } else {
            console.log('Mauvaise réponse!');
        }
    }

    function nextQuestion() {
        currentQuestion++;
        if (currentQuestion >= quizData[currentLevel].length) {

            currentQuestion = 0;
        }
        showQuestion();
    }

    function prevQuestion() {
        currentQuestion--;
        if (currentQuestion < 0) {

            currentQuestion = quizData[currentLevel].length - 1;
        }
        showQuestion();
    }

    function changeLevel() {
        currentLevel = levelSelector.value;
        currentQuestion = 0;
        showQuestion();
    }

    showQuestion();

</script>
